{"ast":null,"code":"var _jsxFileName = \"/home/gminor/Desktop/CreditSea/frontend/src/pages/AdminDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ApplicantTable from '../components/ApplicantTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [applicants, setApplicants] = useState([]); // Specify type if needed\n\n  useEffect(() => {\n    const fetchApplicants = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/admin/applicants');\n        console.log('Fetched applicants:', response.data); // Log the fetched data\n        setApplicants(response.data);\n      } catch (error) {\n        console.error('Error fetching applicants:', error);\n      }\n    };\n    fetchApplicants();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ApplicantTable, {\n      applicants: applicants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"/ZYrimItWfsxEXSjzvXypk/EECs=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","ApplicantTable","jsxDEV","_jsxDEV","AdminDashboard","_s","applicants","setApplicants","fetchApplicants","response","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gminor/Desktop/CreditSea/frontend/src/pages/AdminDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ApplicantTable from '../components/ApplicantTable';\n\nconst AdminDashboard = () => {\n  const [applicants, setApplicants] = useState<any[]>([]); // Specify type if needed\n\n  useEffect(() => {\n    const fetchApplicants = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/admin/applicants');\n        console.log('Fetched applicants:', response.data); // Log the fetched data\n        setApplicants(response.data);\n      } catch (error) {\n        console.error('Error fetching applicants:', error);\n      }\n    };\n\n    fetchApplicants();\n  }, []);\n\n  return (\n    <div>\n      \n      <ApplicantTable applicants={applicants} />\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;;EAEzDD,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,4CAA4C,CAAC;QAC9EC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QACnDN,aAAa,CAACE,QAAQ,CAACI,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDN,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,eAEEZ,OAAA,CAACF,cAAc;MAACK,UAAU,EAAEA;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACd,EAAA,CAvBID,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAyBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}